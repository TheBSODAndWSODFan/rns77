name: Record and Publish Stream

on:
  workflow_dispatch:  # Manually trigger this workflow from GitHub UI

jobs:
  record-stream:
    runs-on: ubuntu-latest

    env:
      tag_name: stream-recording-${{ github.run_id }}

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y mpv ffmpeg gh

      - name: Record stream using mpv (stop manually)
        run: |
          mkdir -p artifacts/output
          mpv --vo=null --ao=null "https://live.eu-north-1a.cf.dmcdn.net/sec2(XHn56GGqejqYkxe0MSU1BEtZcAM7eVkdzCHukSq4x6fow7GYlx09T7Bz_SFb1KQbwWwWg7VoAyNOkG8M3yqEwGwGPTF0gbjdFhUlF4MMRdh6GiYOaUGnGkt-tmH3S7SW)/dm/3/x8qckyq/s/live-480.m3u8" --stream-record=artifacts/output/recorded.ts

      - name: Convert TS to MP4 using ffmpeg
        run: ffmpeg -i artifacts/output/recorded.ts -vcodec copy -acodec copy artifacts/output/recorded.mp4

      - name: Create GitHub Release
        run: |
          gh release create "$tag_name" --repo "${{ github.repository }}" \
            --title "Stream Recording - $tag_name" \
            --notes "Automated stream recording." \
            --draft
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload all artifacts to the release
        run: |
          repo=${{ github.repository }}
          tag_name=${{ env.tag_name }}
          for artifact_dir in ./artifacts/*; do
            for artifact in "$artifact_dir"/*; do
              gh release upload "$tag_name" "$artifact" --repo "$repo" --clobber
            done
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
