name: Record and Publish Stream

on:
  workflow_dispatch:  # Manually trigger this workflow from GitHub UI

jobs:
  record-stream:
    runs-on: ubuntu-latest

    env:
      tag_name: stream-recording-${{ github.run_id }}

    steps:
      - name: Disable initramfs update
        run: sudo sed -i 's/yes/no/g' /etc/initramfs-tools/update-initramfs.conf
      - name: Disable man-db update
        run: sudo rm -f /var/lib/man-db/auto-update
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y mpv ffmpeg gh

      - name: Record stream using mpv (stop manually)
        id: record
        continue-on-error: true
        run: |
          mkdir -p artifacts/output
          mpv --vo=null --ao=null "https://live.eu-north-1a.cf.dmcdn.net/sec2(WtLIHlVVo8zkxEAY_A0sHF3xrPkez4u6p1_FB7txWiEiOSd0D_rKmtuRRIp24z1qw0Y28TzmodLRK2TAkkts08oXWDQTdY6YR7kgRLbQAYzsmqzNKjE7LTc-6kzhck-w)/dm/3/x8qckyq/s/live-720.m3u8" --stream-record=artifacts/output/recorded.ts

      - name: Convert TS to MP4 using ffmpeg (if exists)
        if: always()
        run: |
          if [ -f artifacts/output/recorded.ts ]; then
            ffmpeg -i artifacts/output/recorded.ts -vcodec copy -acodec copy artifacts/output/recorded.mp4
            rm -rf artifacts/output/recorded.ts 
          else
            echo "recorded.ts not found, skipping ffmpeg"
          fi

      - name: Create GitHub Release
        if: always()
        run: |
          gh release create "$tag_name" --repo "${{ github.repository }}" \
            --title "Stream Recording - $tag_name" \
            --notes "Automation of stream recording." \
            --draft
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload all artifacts to the release
        if: always()
        run: |
          repo=${{ github.repository }}
          tag_name=${{ env.tag_name }}
          for artifact_dir in ./artifacts/*; do
            for artifact in "$artifact_dir"/*; do
              gh release upload "$tag_name" "$artifact" --repo "$repo" --clobber
            done
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup (optional)
        if: always()
        run: rm -rf artifacts
